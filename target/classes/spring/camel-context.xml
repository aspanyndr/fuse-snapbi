<?xml version="1.0" encoding="utf-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
        <bean class="com.fusetest.testing.util.KillRoute" id="killRoute" scope="singleton"/>
        <bean class="com.fusetest.testing.util.GenerateSignature" id="genSign" scope="singleton"/>
        <bean class="com.fusetest.testing.util.GenerateID" id="genID" scope="singleton"/>
        <bean class="com.fusetest.testing.util.ValidateResponse" id="valResponse" scope="singleton"/>
        <bean class="com.fusetest.testing.util.FilterResponse" id="filterResp"/>
        <bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSourceAudit" primary="true">
            <property name="driverClassName" value="org.postgresql.Driver"/>
            <property name="url" value="jdbc:postgresql://${postgre.host}:${postgre.port}/${postgre.db}?useTimezone=true&amp;serverTimezone=UTC"/>
            <property name="username" value="${postgre.user}"/>
            <property name="password" value="${postgre.password}"/>
        </bean>
        <!-- import routeBS.xml-->
    <import resource="routeOneSignatureAuth.xml"/>
    <import resource="routeTwoAccessTokenB2B.xml"/>
        <camelContext id="camel" streamCache="true" xmlns="http://camel.apache.org/schema/spring">
            <routeContextRef ref="signature_auth"/>
            <routeContextRef ref="access_tokenb2b"/>
            <dataFormats>
                <json allowJmsType="false" allowUnmarshallType="false" contentTypeHeader="false" enableJaxbAnnotationModule="false" id="jackson" library="Jackson" prettyPrint="false" useDefaultObjectMapper="true" useList="false"/>
            </dataFormats>
            <restConfiguration bindingMode="auto" component="jetty" contextPath="/fusesnap" enableCORS="true" host="0.0.0.0" port="9091">
                <corsHeaders key="Access-Control-Allow-Origin" value="*"/>
                <corsHeaders key="Access-Control-Allow-Headers" value="Origin, Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers"/>
                <corsHeaders key="Access-Control-Allow-Methods" value="GET,PUT,POST,HEAD,OPTIONS"/>
            </restConfiguration>
            <rest id="rest-82871616-cbc5-4dd8-8554-1d8c03e8246f">
                <post bindingMode="json" consumes="application/json"
                      id="35c2ebce-476f-4694-969a-5a4c0909ee20"
                      produces="application/json" uri="/signature-auth">
                    <route>
                        <doTry id="_doTry1">
                            <to uri="direct:bs_1"/>
                            <doCatch id="_doCatch1">
                                <exception>java.io.IOException</exception>
                                <log id="co_log1" message="Error Message : ${exception.message}, Body : ${body}"/>
                                <setHeader
                                        headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader1">
                                    <constant>500</constant>
                                </setHeader>
                                <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
                                <setBody id="co_setBody1">
                                    <simple>{
                                        "code": 500,
                                        "message": "Internal Server Error ",
                                        "result": "Failed"
                                        }</simple>
                                </setBody>
                            </doCatch>
                        </doTry>
                        <onException>
                            <exception>com.fasterxml.jackson.core.JsonParseException</exception>
                            <exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
                            <exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
                            <exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
                            <exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
                            <handled>
                                <constant>true</constant>
                            </handled>
                            <transform>
                                <simple>{
                                    "code": 422,
                                    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
                                    "result": "Failed"
                                    }
                                </simple>
                            </transform>
                            <setHeader headerName="CamelHttpResponseCode">
                                <constant>422</constant>
                            </setHeader>
                        </onException>
                    </route>
                </post>
                <post bindingMode="json" consumes="application/json"
                      id="d11a934f-5f10-47d1-bbce-a22620f7244d"
                      produces="application/json" uri="/signature-service">
                    <route>
                        <doTry id="_doTry7">
                            <to uri="direct:bs_7"/>
                            <doCatch id="_doCatch7">
                                <exception>java.io.IOException</exception>
                                <log id="co_log7" message="Error Message : ${exception.message}, Body : ${body}"/>
                                <setHeader
                                        headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader7">
                                    <constant>500</constant>
                                </setHeader>
                                <convertBodyTo id="_convertBodyTo7" type="java.lang.String"/>
                                <setBody id="co_setBody7">
                                    <simple>{
                                        "code": 500,
                                        "message": "Internal Server Error ",
                                        "result": "Failed"
                                        }</simple>
                                </setBody>
                            </doCatch>
                        </doTry>
                        <onException>
                            <exception>com.fasterxml.jackson.core.JsonParseException</exception>
                            <exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
                            <exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
                            <exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
                            <exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
                            <handled>
                                <constant>true</constant>
                            </handled>
                            <transform>
                                <simple>{
                                    "code": 422,
                                    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
                                    "result": "Failed"
                                    }
                                </simple>
                            </transform>
                            <setHeader headerName="CamelHttpResponseCode">
                                <constant>422</constant>
                            </setHeader>
                        </onException>
                    </route>
                </post>
                <post bindingMode="json" consumes="application/json"
                      id="441e1458-b595-454a-a091-67358d47ad01"
                      produces="application/json"
                      type="com.fusetest.testing.dto.B2BAccessToken" uri="/access-token/b2b">
                    <route>
                        <to uri="bean-validator:access-token/b2b"/>
                        <setProperty propertyName="grantType">
                            <simple>${body.grantType}</simple>
                        </setProperty>
                        <doTry id="_doTry5">
                            <to uri="direct:bs_5"/>
                            <doCatch id="_doCatch5">
                                <exception>java.io.IOException</exception>
                                <log id="co_log5" message="Error Message : ${exception.message}, Body : ${body}"/>
                                <setHeader
                                        headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader5">
                                    <constant>500</constant>
                                </setHeader>
                                <convertBodyTo id="_convertBodyTo5" type="java.lang.String"/>
                                <setBody id="co_setBody5">
                                    <simple>{
                                        "code": 500,
                                        "message": "Internal Server Error ",
                                        "result": "Failed"
                                        }</simple>
                                </setBody>
                            </doCatch>
                        </doTry>
                        <onException>
                            <exception>com.fasterxml.jackson.core.JsonParseException</exception>
                            <exception>com.fasterxml.jackson.databind.JsonMappingException</exception>
                            <exception>com.fasterxml.jackson.databind.exc.InvalidFormatException</exception>
                            <exception>org.apache.camel.component.bean.validator.BeanValidationException</exception>
                            <exception>org.springframework.beans.factory.support.BeanDefinitionValidationException</exception>
                            <handled>
                                <constant>true</constant>
                            </handled>
                            <transform>
                                <simple>{
                                    "code": 422,
                                    "message": "Failure when parsing input. \n${exchangeProperty.CamelExceptionCaught.getMessage}",
                                    "result": "Failed"
                                    }
                                </simple>
                            </transform>
                            <setHeader headerName="CamelHttpResponseCode">
                                <constant>422</constant>
                            </setHeader>
                        </onException>
                    </route>
                </post>
            </rest>
            <route id="_gen_sign">
                <from id="_from31" uri="direct:gen_sign"/>
                <process id="_init_strategy_gen_sign" ref="killRoute"/>
                <throttle id="_throttle1" timePeriodMillis="100">
                    <constant>1</constant>
                    <bean id="_bean1" method="process('input')" ref="genSign"/>
                </throttle>
            </route>
            <route id="_gen_ID">
                <from id="_from32" uri="direct:genID"/>
                <process id="_init_strategy_val_message" ref="killRoute"/>
                <throttle id="_throttle2" timePeriodMillis="100">
                    <constant>1</constant>
                    <bean id="_bean2" method="process('input')" ref="genID"/>
                </throttle>
            </route>
            <route id="_valResponse">
                <from id="_from33" uri="direct:valResponse"/>
                <process id="_init_strategy_valResponse" ref="killRoute"/>
                <convertBodyTo id="_convertBodyTo3x" type="java.lang.String"/>
                <process id="_init_strategy_valResponse" ref="valResponse"/>
                <log id="_log3" message="body valResponse  : ${exchangeProperty.isSuccess}"/>
            </route>
            <route id="_gen_log">
                <from id="_from2" uri="direct:gen_log"/>
                <process id="_init_strategy_gen_log" ref="killRoute"/>
                <!--log id="_log1" message="Timestamp : ${date:now:yyyy-MM-dd HH:mm:ss} , Signature : ${exchangeProperty.signature}"/>-->
                <convertBodyTo id="_convertBodyTo2" type="java.lang.String"/>
                <process id="_process1" ref="filterResp"/>
                <log id="_log2" message="body to be inserted to DB : ${body}"/>
                <doTry id="_doTry1x">
                    <toD id="_to3" uri="sql:insert into {{postgre.table.audit}} values ('${exchangeProperty.uuid}','${exchangeProperty.respBs}','${exchangeProperty.status}','${date:now:yyyy-MM-dd HH:mm:ss}')"/>
                    <doCatch id="_doCatch1x">
                        <exception>org.springframework.jdbc.CannotGetJdbcConnectionException</exception>
                        <exception>org.apache.camel.component.sql.SqlComponent</exception>
                        <exception>java.sql.SQLException</exception>
                        <log id="co_log1x" message="Error Message : ${exception.message}"/>
                        <setHeader headerName="Exchange.HTTP_RESPONSE_CODE" id="co_setHeader1x">
                            <constant>500</constant>
                        </setHeader>
                        <convertBodyTo id="_convertBodyTo1x" type="java.lang.String"/>
                        <setBody id="co_setBody1x">
                            <simple>{
                                "code": 500,
                                "message": "Internal Server Error ",
                                "result": "Failed"
                                }</simple>
                        </setBody>
                    </doCatch>
                </doTry>
            </route>
        </camelContext>
</beans>
